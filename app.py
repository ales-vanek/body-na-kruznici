import streamlit as st
import matplotlib.pyplot as plt
import numpy as np
from fpdf import FPDF  # fpdf2
from io import BytesIO
import os

st.set_page_config(page_title="Body na kru≈ænici", layout="wide")

# --- Autor / kontakt (pevn√©) ---
AUTHOR_NAME = "Ale≈° Vanƒõk"
AUTHOR_EMAIL = "ales.vanek@example.com"
AUTHOR_DESC = (
    f"{AUTHOR_NAME} ‚Äì student Fakulty stavebn√≠ VUT v Brnƒõ.\n"
    "Zaj√≠m√°m se o praktick√© vyu≈æit√≠ matematiky a programov√°n√≠ v in≈æen√Ωrsk√© praxi. "
    "R√°d kombinuji technick√© v√Ωpoƒçty s vizualizacemi a uƒç√≠m se modern√≠ n√°stroje "
    "pro sd√≠len√≠ a prezentaci v√Ωsledk≈Ø."
)

# --- Cesta k TTF fontu (pro Unicode v PDF) ---
FONT_PATH = os.path.join("assets", "DejaVuSans.ttf")

st.title("üìê Body na kru≈ænici ‚Äì Webov√° aplikace")

# --- Postrann√≠ menu pro vstupy ---
st.sidebar.header("Nastaven√≠ parametr≈Ø")
x0 = st.sidebar.number_input("Sou≈ôadnice st≈ôedu X:", value=0.0)
y0 = st.sidebar.number_input("Sou≈ôadnice st≈ôedu Y:", value=0.0)
r = st.sidebar.number_input("Polomƒõr kru≈ænice:", value=5.0, min_value=0.1)
n = st.sidebar.number_input("Poƒçet bod≈Ø na kru≈ænici:", value=8, min_value=1, step=1)
barva = st.sidebar.color_picker("Vyber barvu bod≈Ø:", "#ff0000")

# --- V√Ωpoƒçet sou≈ôadnic bod≈Ø ---
theta = np.linspace(0, 2*np.pi, int(n), endpoint=False)
x = x0 + r * np.cos(theta)
y = y0 + r * np.sin(theta)

# --- Funkce pro vytvo≈ôen√≠ grafu (abychom ho pak mohli d√°t i do PDF) ---
def create_plot():
    fig, ax = plt.subplots()
    ax.set_aspect('equal')
    ax.scatter(x, y, c=barva, s=100, label="Body na kru≈ænici")
    ax.add_patch(plt.Circle((x0, y0), r, fill=False, linestyle="--", color="gray"))
    ax.plot(x0, y0, "bo", label="St≈ôed")

    # Osy a popisky
    ax.set_xlabel("X [m]")
    ax.set_ylabel("Y [m]")
    ax.axhline(0, color="black", linewidth=0.5)
    ax.axvline(0, color="black", linewidth=0.5)
    ax.legend()
    return fig

# --- Z√°lo≈æky ---
tab1, tab2 = st.tabs(["üìä Graf", "‚ÑπÔ∏è Informace"])

with tab1:
    st.subheader("Vykreslen√≠ bod≈Ø na kru≈ænici")
    fig = create_plot()
    st.pyplot(fig)

with tab2:
    st.subheader("üë§ O mnƒõ")
    st.markdown(
        f"""
**{AUTHOR_NAME}** ‚Äì student Fakulty stavebn√≠ VUT v Brnƒõ.  

Zaj√≠m√°m se o praktick√© vyu≈æit√≠ matematiky a programov√°n√≠ v in≈æen√Ωrsk√© praxi.  
R√°d kombinuji technick√© v√Ωpoƒçty s vizualizacemi a uƒç√≠m se modern√≠ n√°stroje pro sd√≠len√≠ a prezentaci v√Ωsledk≈Ø.  

**Kontakt:** {AUTHOR_EMAIL}  
"""
    )

    st.markdown(
        """
### üß∞ Pou≈æit√© technologie
- **Python** ‚Äì univerz√°ln√≠ jazyk pro skripty, vƒõdeck√© v√Ωpoƒçty i aplikace.  
- **Streamlit** ‚Äì framework pro tvorbu interaktivn√≠ch webov√Ωch aplikac√≠ v Pythonu, bez nutnosti ps√°t HTML/JS.  
- **NumPy** ‚Äì pr√°ce s poli a vektory; v√Ωpoƒçet sou≈ôadnic bod≈Ø na kru≈ænici.  
- **Matplotlib** ‚Äì kreslen√≠ grafu, os a geometrick√Ωch prvk≈Ø.  
- **fpdf2** ‚Äì generov√°n√≠ PDF s podporou Unicode (p≈ôi pou≈æit√≠ TTF fontu).  
- **GitHub** ‚Äì spr√°va verz√≠ a sd√≠len√≠ k√≥du, integrace se Streamlit Cloudem.  
"""
    )

# --- Export do PDF (s vlo≈æen√Ωm grafem) ---
st.subheader("üìÑ Export do PDF")

def build_pdf(fig) -> BytesIO:
    pdf = FPDF()
    pdf.add_page()

    # P≈ôid√°n√≠ fontu (UTF-8)
    if not os.path.exists(FONT_PATH):
        raise FileNotFoundError(
            f"Nenalezen font '{FONT_PATH}'. P≈ôidej pros√≠m TTF soubor (nap≈ô. DejaVuSans.ttf) do slo≈æky 'assets/'."
        )
    pdf.add_font("DejaVu", "", FONT_PATH, uni=True)
    pdf.set_font("DejaVu", size=14)

    # Nadpis
    pdf.cell(0, 10, "Report ‚Äì Body na kru≈ænici", ln=True, align="C")
    pdf.ln(5)

    # O autorovi
    pdf.set_font("DejaVu", size=11)
    pdf.multi_cell(0, 7, AUTHOR_DESC)
    pdf.ln(5)
    pdf.cell(0, 7, f"Kontakt: {AUTHOR_EMAIL}", ln=True)
    pdf.ln(5)

    # Parametry √∫lohy
    pdf.set_font("DejaVu", size=12)
    pdf.cell(0, 8, "Parametry:", ln=True)
    pdf.set_font("DejaVu", size=11)
    pdf.multi_cell(
        0, 7,
        f"- St≈ôed: ({x0}, {y0})\n"
        f"- Polomƒõr: {r}\n"
        f"- Poƒçet bod≈Ø: {int(n)}\n"
        f"- Barva bod≈Ø: {barva}"
    )
    pdf.ln(5)

    # Technologie
    pdf.set_font("DejaVu", size=12)
    pdf.cell(0, 8, "Pou≈æit√© technologie:", ln=True)
    pdf.set_font("DejaVu", size=11)
    pdf.multi_cell(
        0, 7,
        "- Python ‚Äì univerz√°ln√≠ jazyk s velk√Ωm ekosyst√©mem knihoven.\n"
        "- Streamlit ‚Äì rychl√Ω v√Ωvoj interaktivn√≠ch web aplikac√≠.\n"
        "- NumPy ‚Äì v√Ωpoƒçty a pr√°ce s poli.\n"
        "- Matplotlib ‚Äì vizualizace a grafy.\n"
        "- fpdf2 ‚Äì generov√°n√≠ PDF s Unicode.\n"
        "- GitHub ‚Äì verzov√°n√≠ a nasazen√≠ aplikace."
    )
    pdf.ln(5)

    # Obr√°zek grafu
    img_buffer = BytesIO()
    fig.savefig(img_buffer, format="png", bbox_inches="tight")
    img_buffer.seek(0)
    pdf.image(img_buffer, x=40, w=130)  # vlo≈æen√≠ obr√°zku doprost≈ôed
    img_buffer.close()

    # V√Ωstup do pamƒõti
    buffer = BytesIO()
    pdf.output(buffer)
    buffer.seek(0)
    return buffer

if st.button("Vytvo≈ôit PDF"):
    try:
        fig = create_plot()
        pdf_buffer = build_pdf(fig)
        st.download_button(
            label="‚¨áÔ∏è St√°hnout PDF",
            data=pdf_buffer,
            file_name="report.pdf",
            mime="application/pdf"
        )
        st.success("PDF bylo vygenerov√°no.")
    except Exception as e:
        st.error(f"Nepoda≈ôilo se vytvo≈ôit PDF: {e}")
